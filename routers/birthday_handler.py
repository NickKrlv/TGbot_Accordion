import logging
from datetime import datetime, date
from aiogram import Router, types
from database.users_db import db_manager

router = Router(name=__name__)
logger = logging.getLogger(__name__)


def get_users_with_birthday_today():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"""
    try:
        conn = db_manager.get_connection()
        cursor = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        today = date.today()
        today_str = today.strftime("%d.%m.%Y")
        day_month = today.strftime("%d.%m")  # –§–æ—Ä–º–∞—Ç –î–î.–ú–ú

        # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Å–æ–≤–ø–∞–¥–∞—é—â–µ–π –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è (–î–î.–ú–ú)
        cursor.execute('''
                       SELECT telegram_id, full_name, birth_date
                       FROM users
                       WHERE substr(birth_date, 1, 5) = ?
                       ''', (day_month,))

        users = cursor.fetchall()
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è")
        return users
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")
        return []


async def send_birthday_congratulations(bot):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è"""
    try:
        users = get_users_with_birthday_today()

        if not users:
            logger.info("–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è")
            return

        for user in users:
            telegram_id, full_name, birth_date = user

            # –í—ã—á–∏—Å–ª—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç
            try:
                birth_year = int(birth_date.split('.')[-1])
                current_year = datetime.now().year
                age = current_year - birth_year

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞
                if 11 <= age % 100 <= 14:
                    age_text = f"{age} –ª–µ—Ç–∏–µ–º"
                elif age % 10 == 1:
                    age_text = f"{age} –ª–µ—Ç–∏–µ–º"
                elif 2 <= age % 10 <= 4:
                    age_text = f"{age} –ª–µ—Ç–∏–µ–º"
                else:
                    age_text = f"{age} –ª–µ—Ç–∏–µ–º"
            except:
                age_text = "–º–Ω–æ–≥–æ –ª–µ—Ç–∏–µ–º"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
            try:
                congratulation_message = (
                    f"üéâ –î–æ—Ä–æ–≥–æ–π(–∞—è) {full_name}!\n\n"
                    f"–° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è! üéÇ\n"
                    f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å {age_text}! üéà\n\n"
                    f"–ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Ä–∞–¥–æ—Å—Ç—å—é, "
                    f"–∞ –≤–µ—Å—å –≥–æ–¥ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ç–µ–±–µ —Å—á–∞—Å—Ç—å–µ –∏ —É—Å–ø–µ—Ö! üåü"
                )

                await bot.send_message(
                    chat_id=-1001785421122,
                    text=congratulation_message
                )
                logger.info(f"–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {full_name}")

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}: {e}")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π: {e}")