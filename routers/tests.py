import logging
from aiogram import F, Router
from aiogram.filters import Command
from aiogram import types
from database.users_db import db_manager

router = Router(name=__name__)
logger = logging.getLogger(__name__)


# –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π
@router.message(Command("test_birthday"), F.chat.type == "private")
async def test_birthday_command(message: types.Message, bot):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª —Ç–µ—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π")

    try:
        from routers.birthday_handler import send_birthday_congratulations
        await send_birthday_congratulations(bot)
        await message.answer("‚úÖ –¢–µ—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(Command("stats"), F.chat.type == "private")
async def show_user_stats(message: types.Message):
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    message_count = db_manager.get_user_message_count(message.from_user.id)
    await message.answer(f"üìä –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ {message_count} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø–∞—Ö")


# –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
@router.message(Command("activity_check"), F.chat.type == "private")
async def manual_activity_check(message: types.Message, bot):
    """–†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")

    try:
        from routers.activity_handler import check_monthly_activity
        # –£–∫–∞–∂–∏—Ç–µ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –∑–¥–µ—Å—å
        GROUP_CHAT_ID = -1001785421122  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã

        await message.answer("‚úÖ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
        await check_monthly_activity(bot, GROUP_CHAT_ID)
        await message.answer("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}")


@router.message(Command("news_of_the_week"), F.chat.type == "private")
async def news_of_the_week(message: types.Message, bot):
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏")

    text = (f"üì∞ –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏!\n\n"
            f"@Alphz58 —Å–Ω–æ–≤–∞ –ø–æ–ª—ã—Å–µ–ª\n"
            f"–ù–∞ —ç—Ç–æ–º –≤—Å–µ")
    await bot.send_message(
        chat_id=-1001785421122,
        text=text,
        parse_mode="HTML"
    )